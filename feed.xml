<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="./css/pretty-atom-feed.xsl" type="text/xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <title>Forrest O. Interactive</title>
  <subtitle>Forrest O.&#39;s web blog wiki garden home</subtitle>
  <link href="https://forresto.com/feed.xml" rel="self" />
  <link href="https://forresto.com/" />
  <updated>2025-02-06T00:00:00Z</updated>
  <id>https://forresto.com/</id>
  <author>
    <name>Forrest O.</name>
  </author>
  <entry>
    <title>CAD – Cardboard Aided Design</title>
    <link href="https://forresto.com/fab-academy/cardboard-aided-design.html" />
    <updated>2025-02-06T00:00:00Z</updated>
    <id>https://forresto.com/fab-academy/cardboard-aided-design.html</id>
    <content type="html">&lt;p&gt;A quick rant on the importance of physical prototyping as a part of the spiral design process.&lt;/p&gt;
&lt;p&gt;The spiral design process encourages us to build on our ideas in cycles. Instead of waiting for the perfect design, we should make a &lt;em&gt;thing&lt;/em&gt; towards that goal every week, so we can build on our previous work.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/cardboard-aided-design-player.jpg-t0Ba6acwue-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/cardboard-aided-design-player.jpg-t0Ba6acwue-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/cardboard-aided-design-player.jpg-t0Ba6acwue-1280.jpeg&quot; alt=&quot;Hex box prototype.&quot; width=&quot;1280&quot; height=&quot;959&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Scale &lt;a href=&quot;https://forresto.com/fab-academy/02-cuttle-xyz.html&quot;&gt;model of music player concept&lt;/a&gt;, made with lasercut cardstock.&lt;/p&gt;
&lt;p&gt;Cardboard, paper, glue, clay... cheap and accessible materials are perfect for physical prototyping as part of this spiral design process. Because the materials are not precious, we can chop, hack, remold, and remake these models as often as needed.&lt;/p&gt;
&lt;p&gt;A design that has only existed on the screen might look good, but feel awkward. By making something physical, we can validate our ideas of how something should take up space and feel in the real world.&lt;/p&gt;
&lt;p&gt;&lt;video src=&quot;https://forresto.com/fab-academy/cardboard-aided-design-player-token.mp4&quot; autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot;&gt;&lt;/video&gt;&lt;/p&gt;
&lt;p&gt;It&#39;s also easier to get feedback from friends and family with a physical object, than a 3D model on a screen. I put this in their hands to test that the scale and spacing is usable for folks with smaller hands than me. I said &amp;quot;imagine changing the music by taking this token off and putting another one on,&amp;quot; which led to good ideas about the feel and materials.&lt;/p&gt;
&lt;p&gt;When starting &lt;a href=&quot;https://forresto.com/fab-academy/02-cad-comparison.html&quot;&gt;CAD week&lt;/a&gt; I was excited to jump into 3d modeling, but perhaps I should have started with a quicker cardboard version of my sketches to validate the basic dimensions and feel.&lt;/p&gt;
&lt;p&gt;I felt strongly enough about this that I put my hand up in the weekly call to show my papercraft and encourage more crafty prototyping. ✋&lt;/p&gt;
&lt;p&gt;Share your scrappy prototypes!&lt;/p&gt;
&lt;h1 id=&quot;read-more&quot; tabindex=&quot;-1&quot;&gt;Read More&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sendcutsend.com/blog/5-tips-for-prototyping-from-cardboard-to-cad/&quot;&gt;Tips for prototyping with cardboard&lt;/a&gt; from SendCutSend.&lt;/li&gt;
&lt;li&gt;Todepond&#39;s advocacy of &lt;a href=&quot;https://www.todepond.com/feed/?search=scrappy&quot;&gt;&amp;quot;sharing scrappy fiddles&amp;quot;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Bret Victor on &lt;a href=&quot;https://worrydream.com/ABriefRantOnTheFutureOfInteractionDesign/&quot;&gt;escaping pictures under glass&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Cuttle.xyz evaluation</title>
    <link href="https://forresto.com/fab-academy/02-cuttle-xyz.html" />
    <updated>2025-02-05T00:00:00Z</updated>
    <id>https://forresto.com/fab-academy/02-cuttle-xyz.html</id>
    <content type="html">&lt;p&gt;I&#39;m on the small team building &lt;a href=&quot;https://cuttle.xyz&quot;&gt;Cuttle CAD for makers&lt;/a&gt;. It is a browser-based 2D design app, with parametric and scripting features. Because of this, it is the parametric design workflow that I&#39;m most comfortable with. This week I learned the basics of a handful of 3D CAD software, and I wanted to end the week with a &lt;a href=&quot;https://forresto.com/fab-academy/cardboard-aided-design.html&quot;&gt;physical object&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-cuttle-xyz-interface.png-BE_dhztC22-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-cuttle-xyz-interface.png-BE_dhztC22-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-cuttle-xyz-interface.png-BE_dhztC22-1280.png&quot; alt=&quot;Cuttle interface.&quot; width=&quot;1280&quot; height=&quot;746&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Cuttle interface, showing the same component as four instances with different parameters.&lt;/p&gt;
&lt;p&gt;Using parameters in Cuttle is different than the constraint-based modelling in &lt;a href=&quot;https://forresto.com/fab-academy/02-solvespace.html&quot;&gt;SolveSpace&lt;/a&gt; and &lt;a href=&quot;https://forresto.com/fab-academy/02-freecad.html&quot;&gt;FreeCAD&lt;/a&gt;. In Cuttle, parameters are emphasized in the interface, and there is not a concept of constraints. This means that to make shapes that a relative to each other, you have to do more math in the scale and position parameters of the shapes. Instead of &amp;quot;attach the left edge of the rectangle to the right edge of the polygon&amp;quot; in Cuttle it is more like &amp;quot;set the position of the rectangle relative to the size of the rectangle and polygon&amp;quot;. Cuttle does feel like it is missing some basic constraint-based modelling features, but there is a tradeoff with the user experience and runtime complexity. Constraint solving is a can of worms, and Cuttle has decided to leave that can closed for now.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-cuttle-xyz-parameters.png-LLtfkNbXDC-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-cuttle-xyz-parameters.png-LLtfkNbXDC-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-cuttle-xyz-parameters.png-LLtfkNbXDC-1280.png&quot; alt=&quot;Cuttle interface with derived parameters labelled in pink.&quot; width=&quot;1280&quot; height=&quot;744&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Cuttle pro tip: make any reused math expressions into parameters. This screenshot labels these derived parameters where they are used in the design.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-cuttle-xyz-simplified-published-view.png-BmOLvyba7P-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-cuttle-xyz-simplified-published-view.png-BmOLvyba7P-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-cuttle-xyz-simplified-published-view.png-BmOLvyba7P-1280.png&quot; alt=&quot;Cuttle read me simplified view with download button and parameter inputs.&quot; width=&quot;1280&quot; height=&quot;578&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Cuttle projects have a &amp;quot;read me&amp;quot; section where you can add documentation of your project, and embed certain components. The parameters list in this view is simplified; the derived parameters are hidden.&lt;/p&gt;
&lt;h1 id=&quot;result&quot; tabindex=&quot;-1&quot;&gt;Result&lt;/h1&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/cardboard-aided-design-player.jpg-t0Ba6acwue-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/cardboard-aided-design-player.jpg-t0Ba6acwue-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/cardboard-aided-design-player.jpg-t0Ba6acwue-1280.jpeg&quot; alt=&quot;Hex box prototype.&quot; width=&quot;1280&quot; height=&quot;959&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Scale model, made with lasercut cardstock.&lt;/p&gt;
&lt;p&gt;&lt;video src=&quot;https://forresto.com/fab-academy/cardboard-aided-design-player-token.mp4&quot; autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot;&gt;&lt;/video&gt;&lt;/p&gt;
&lt;p&gt;Published design, where you can change parameters: &lt;a href=&quot;https://cuttle.xyz/@forresto/Hexagon-Box-Parametric-65WPuv1YGPgR&quot;&gt;Cuttle Parametric Hexagonal Box&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See my quick rant &lt;a href=&quot;https://forresto.com/fab-academy/cardboard-aided-design.html&quot;&gt;encouraging physical prototyping with everyday materials&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&quot;reference&quot; tabindex=&quot;-1&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cuttle.xyz/learn/getting-started-with-scripting&quot;&gt;Cuttle.xyz documentation&lt;/a&gt; and &lt;a href=&quot;https://cuttle.xyz/learn/video-tutorials&quot;&gt;videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nordicfablabs.gitlab.io/nordic_fablabs_bootcamp_2024/workshops/cuttlexyz/&quot;&gt;Laser cut cardstock workshop at Nordic Fablabs Bootcamp&lt;/a&gt; 2024&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>FreeCAD evaluation</title>
    <link href="https://forresto.com/fab-academy/02-freecad.html" />
    <updated>2025-02-04T00:00:00Z</updated>
    <id>https://forresto.com/fab-academy/02-freecad.html</id>
    <content type="html">&lt;p&gt;FreeCAD seems to be the OpenOffice of CAD, for better or worse.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-freecad-interface.png-xIjjN0LW5D-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-freecad-interface.png-xIjjN0LW5D-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-freecad-interface.png-xIjjN0LW5D-1280.png&quot; alt=&quot;FreeCAD interface with parameters.&quot; width=&quot;1280&quot; height=&quot;777&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;It helped that I got comfortable with constraint-based modelling in SolveSpace earlier this week.&lt;/p&gt;
&lt;p&gt;I did make this model parametric, but there are quite a few steps to adding and using a parameter.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-freecad-parametric-workflow.png-BEDHZuNK2P-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-freecad-parametric-workflow.png-BEDHZuNK2P-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-freecad-parametric-workflow.png-BEDHZuNK2P-1280.png&quot; alt=&quot;FreeCAD interface with parameteric workflow.&quot; width=&quot;1280&quot; height=&quot;777&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a spreadsheet to the project&lt;/li&gt;
&lt;li&gt;Add label and value columns the the spreadsheet&lt;/li&gt;
&lt;li&gt;Duplicate labels as &amp;quot;Alias&amp;quot; for each value cell.&lt;/li&gt;
&lt;li&gt;Open the constraint measurement that you want to set with the parameter.&lt;/li&gt;
&lt;li&gt;Click the blue &amp;quot;function&amp;quot; icon by the value.&lt;/li&gt;
&lt;li&gt;Add the parameter, with the format &lt;code&gt;&amp;lt;&amp;lt;SpreadsheetName&amp;gt;&amp;gt;.cell_alias&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;😅&lt;/p&gt;
&lt;p&gt;It seems like this process could be fewer steps / clicks. Setting up the windows to be able to edit the parameters while seeing the model is also more of chore than it should be. But I&#39;ll save my UX opinions for now.&lt;/p&gt;
&lt;h1 id=&quot;result&quot; tabindex=&quot;-1&quot;&gt;Result&lt;/h1&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-freecad-techdraw.png-o9I3RAxlvR-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-freecad-techdraw.png-o9I3RAxlvR-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-freecad-techdraw.png-o9I3RAxlvR-1280.png&quot; alt=&quot;FreeCAD TechDraw output as a 1 to 1 drafting of different views of the model.&quot; width=&quot;1280&quot; height=&quot;904&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;&amp;quot;TechDraw&amp;quot; is a cool feature. I set this view up with an included ISO template in a few minutes. I might try drawing this with a pen plotter during CNC cutting week.&lt;/p&gt;
&lt;p&gt;Project file: &lt;a href=&quot;https://forresto.com/fab-academy/02-freecad-hex-box.FCStd&quot;&gt;02-freecad-hex-box.FCStd&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>SolveSpace evaluation</title>
    <link href="https://forresto.com/fab-academy/02-solvespace.html" />
    <updated>2025-02-02T00:00:00Z</updated>
    <id>https://forresto.com/fab-academy/02-solvespace.html</id>
    <content type="html">&lt;p&gt;Kris introduced &lt;a href=&quot;https://solvespace.com/&quot;&gt;SolveSpace&lt;/a&gt; on Friday, and it started to click today after tinkering for a while.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-solvespace-box.png-ZJRn3GYduG-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-solvespace-box.png-ZJRn3GYduG-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-solvespace-box.png-ZJRn3GYduG-1280.png&quot; alt=&quot;SolveSpace interface, modeling a green hexagon box, inset top, and slots for fingers to pick up the music token.&quot; width=&quot;1280&quot; height=&quot;777&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h1 id=&quot;result&quot; tabindex=&quot;-1&quot;&gt;Result&lt;/h1&gt;
&lt;script type=&quot;module&quot; src=&quot;https://forresto.com/js/model-viewer.min.js&quot;&gt;&lt;/script&gt;
&lt;model-viewer src=&quot;02-solvespace-box.glb&quot; ar=&quot;&quot; ar-modes=&quot;webxr scene-viewer quick-look&quot; camera-controls=&quot;&quot; tone-mapping=&quot;neutral&quot; poster=&quot;02-solvespace-box.glb-poster.webp&quot; shadow-intensity=&quot;1&quot;&gt;
&lt;/model-viewer&gt;
&lt;p&gt;3D model of the &lt;a href=&quot;https://forresto.com/fab-academy/02-cad-comparison.html#sketch&quot;&gt;music player concept&lt;/a&gt;. Model was exported as STEP from SolveSpace, then imported to FreeCAD, then exported as GLB.&lt;/p&gt;
&lt;p&gt;Design file: &lt;a href=&quot;https://forresto.com/fab-academy/02-solvespace-box.slvs&quot;&gt;02-solvespace-box.slvs&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&quot;wPk5TVY0cVo&quot; class=&quot;eleventy-plugin-youtube-embed&quot; style=&quot;position:relative;width:100%;padding-top: 56.25%;&quot;&gt;&lt;iframe style=&quot;position:absolute;top:0;right:0;bottom:0;left:0;width:100%;height:100%;&quot; width=&quot;100%&quot; height=&quot;100%&quot; frameborder=&quot;0&quot; title=&quot;Embedded YouTube video&quot; src=&quot;https://www.youtube-nocookie.com/embed/wPk5TVY0cVo&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;p&gt;This video shows the sketches, groups, and constraints that build up my part.&lt;/p&gt;
&lt;h1 id=&quot;constraint-based-design&quot; tabindex=&quot;-1&quot;&gt;Constraint-based design&lt;/h1&gt;
&lt;p&gt;Using SolveSpace feels like a kind of geometry game, where you sketch a shape, then add constraints until the degrees of freedom goes to 0 (&lt;code&gt;dof ok&lt;/code&gt;) and the part is fully constrained. But look out, because if you add too many you&#39;ll end up with redundant constraints.&lt;/p&gt;
&lt;p&gt;The first challenge with my design was to make a hexagon. I tried a few ways to construct this, but later saw a tutorial with a straightforward way.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sketch circle (shortcut &amp;quot;c&amp;quot;)
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dof 1&lt;/code&gt; (meaning you can change the diameter)&lt;/li&gt;
&lt;li&gt;Give the circle a diameter (&amp;quot;d&amp;quot;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dof ok&lt;/code&gt; (fully constrained)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Select circle and make it a construction reference (&amp;quot;g&amp;quot;)
&lt;ul&gt;
&lt;li&gt;It turns green&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Draw a chain of 6 segments around the circle (&amp;quot;s&amp;quot; for each segment)
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dof 6&lt;/code&gt; (you can drag the ends around the circle)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Select pairs of segments and give them equal length constraints (&amp;quot;q&amp;quot;)
&lt;ul&gt;
&lt;li&gt;According to the tutorial video, a future version will allow selecting all of the segments and making them equal at once. This doesn&#39;t work with my current version. 👈&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dof 1&lt;/code&gt; (you can rotate the hexagon around the circle.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Select a point of the hexagon and the X axis, add &amp;quot;point on plane&amp;quot; constraint (&amp;quot;o&amp;quot;), &lt;code&gt;dof ok&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now the drawing is fully constrained, and you can change the diameter measurement to change the diameter of the hexagon.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-solvespace-heptagon.png-pGSsSOLN_--1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-solvespace-heptagon.png-pGSsSOLN_--1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-solvespace-heptagon.png-pGSsSOLN_--1280.png&quot; alt=&quot;Seven-sided polygon constructed in SolveSpace.&quot; width=&quot;1280&quot; height=&quot;778&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;To show that these steps generalize to other polygons, a heptagon.&lt;/p&gt;
&lt;div id=&quot;vBNAIMiomls&quot; class=&quot;eleventy-plugin-youtube-embed&quot; style=&quot;position:relative;width:100%;padding-top: 56.25%;&quot;&gt;&lt;iframe style=&quot;position:absolute;top:0;right:0;bottom:0;left:0;width:100%;height:100%;&quot; width=&quot;100%&quot; height=&quot;100%&quot; frameborder=&quot;0&quot; title=&quot;Embedded YouTube video&quot; src=&quot;https://www.youtube-nocookie.com/embed/vBNAIMiomls?start=1827&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;p&gt;Paul Lutus&#39; tutorial video, skipped to the &amp;quot;threaded bolt&amp;quot; section that starts with the hexagon.&lt;/p&gt;
&lt;h1 id=&quot;questions&quot; tabindex=&quot;-1&quot;&gt;Questions&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Is there a way to name specific distance constraints and view them in a list?&lt;/li&gt;
&lt;li&gt;Why isn&#39;t there a built-in polygon definition? (Even &lt;a href=&quot;https://forresto.com/fab-academy/02-picocad.html&quot;&gt;picoCAD&lt;/a&gt; has hex. prism as a built-in shape. 😅)&lt;/li&gt;
&lt;li&gt;Is there a way to define one&#39;s own reusable sketches or parts?&lt;/li&gt;
&lt;li&gt;Why are redundant constraints treated as an error?&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;I appreciate that SolveSpace.app is small, 29 MB on my machine. It starts and runs fast. I like the minimal vector aesthetic, and the general feel of the app. I can imagine it being useful to design quick, exact parts.&lt;/p&gt;
&lt;p&gt;It doesn&#39;t seem to bridge the gap from constraint-based to parametric modeling. It seems like I&#39;ve done all the work to make a parametric model, but have to dive through the layers to change any of the dimensions. It would be helpful to expose some of the dimensions as parameters. That would be a step towards making a library of reusable parts.&lt;/p&gt;
&lt;p&gt;By getting a feel for different CAD software I&#39;m starting to understand different ways of thinking about geometry. I&#39;ve been working on &lt;a href=&quot;https://cuttle.xyz&quot;&gt;Cuttle&lt;/a&gt; for 4 years now, and design in that app is limited to the parametric 2d methods that we made it for. Learning other apps is mind-expanding, like parallel universes.&lt;/p&gt;
&lt;h1 id=&quot;reference&quot; tabindex=&quot;-1&quot;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://solvespace.com/&quot;&gt;SolveSpace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://defkey.com/es/solvespace-3-1-shortcuts&quot;&gt;SolveSpace keyboard shortcuts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>picoCAD evaluation</title>
    <link href="https://forresto.com/fab-academy/02-picocad.html" />
    <updated>2025-02-02T00:00:00Z</updated>
    <id>https://forresto.com/fab-academy/02-picocad.html</id>
    <content type="html">&lt;p&gt;One more wildcard. &lt;a href=&quot;https://www.picocad.net&quot;&gt;picoCAD&lt;/a&gt; is built on the &lt;a href=&quot;https://www.lexaloffle.com/pico-8.php&quot;&gt;PICO-8 fantasy console&lt;/a&gt;. What is a fantasy console? It&#39;s an answer to the question &amp;quot;what if NES had integrated developer tools and BBS?&amp;quot;&lt;/p&gt;
&lt;h1 id=&quot;interface&quot; tabindex=&quot;-1&quot;&gt;Interface&lt;/h1&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-picocad.png-tYxW_HgIYy-512.avif 512w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-picocad.png-tYxW_HgIYy-512.webp 512w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-picocad.png-tYxW_HgIYy-512.png&quot; alt=&quot;picoCAD interface with top, perspective, front, and side views.&quot; width=&quot;512&quot; height=&quot;512&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;The modeling experience is very manual. The options for adding geometry are limited to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pyramid&lt;/li&gt;
&lt;li&gt;Prism&lt;/li&gt;
&lt;li&gt;Cube&lt;/li&gt;
&lt;li&gt;Pentagonal prism&lt;/li&gt;
&lt;li&gt;Hexagonal prism&lt;/li&gt;
&lt;li&gt;Cylinder (octagonal prism)&lt;/li&gt;
&lt;li&gt;Plane&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The options to modify a mesh:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Grow, shrink, rotate whole mesh&lt;/li&gt;
&lt;li&gt;Extrude face&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is no subdivision, or adding a vertex to an edge. All vertex positions are locked to a grid. My simple model required a sequence of extruding, scaling, and moving the top face of the hexagonal box. I tried making the finger cuts, but that went beyond my 8-bit CAD skills for today.&lt;/p&gt;
&lt;h1 id=&quot;result&quot; tabindex=&quot;-1&quot;&gt;Result&lt;/h1&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-picocad-hexbox-spin.gif-VALTQ70Drc-384.webp 384w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-picocad-hexbox-spin.gif-VALTQ70Drc-384.gif&quot; alt=&quot;Sweet pixel wireframe render of spinning hexagonal box with inset hexagon on top.&quot; width=&quot;384&quot; height=&quot;384&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;I like experimenting with this limited interface. The design is fully committed to authoring a specific kind of 3D pixel art. I might try exporting OBJ models for &lt;a href=&quot;https://www.unfolder.app&quot;&gt;Unfolder.app&lt;/a&gt; for papercraft design, during computer controlled cutting week.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Zoo Modeling App evaluation</title>
    <link href="https://forresto.com/fab-academy/02-zoo-modeling-app.html" />
    <updated>2025-02-01T00:00:00Z</updated>
    <id>https://forresto.com/fab-academy/02-zoo-modeling-app.html</id>
    <content type="html">&lt;p&gt;A wildcard CAD package that I&#39;ve been wanting to try is &lt;a href=&quot;https://zoo.dev/modeling-app&quot;&gt;Zoo Modeling App&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&quot;result&quot; tabindex=&quot;-1&quot;&gt;Result&lt;/h1&gt;
&lt;script type=&quot;module&quot; src=&quot;https://forresto.com/js/model-viewer.min.js&quot;&gt;&lt;/script&gt;
&lt;model-viewer src=&quot;02-zoo.gltf&quot; camera-controls=&quot;&quot; tone-mapping=&quot;neutral&quot; shadow-intensity=&quot;0.98&quot; camera-orbit=&quot;-12.67deg 56.12deg 0.2405m&quot; field-of-view=&quot;30deg&quot; exposure=&quot;0.63&quot; shadow-softness=&quot;0.63&quot; poster=&quot;./02-zoo.gltf-poster.webp&quot;&gt;
&lt;/model-viewer&gt;
&lt;p&gt;(3D using &lt;a href=&quot;https://modelviewer.dev&quot;&gt;&lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt;&lt;/a&gt; and .gltf export.)&lt;/p&gt;
&lt;p&gt;This is how far I got with an hour of tinkering, including this documentation.&lt;/p&gt;
&lt;h1 id=&quot;cloud-rendering-warning&quot; tabindex=&quot;-1&quot;&gt;Cloud rendering warning&lt;/h1&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-zoo-streaming-warning.png-kC7HEAkrg3-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-zoo-streaming-warning.png-kC7HEAkrg3-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-zoo-streaming-warning.png-kC7HEAkrg3-1280.png&quot; alt=&quot;Welcome to Modeling App! This is a hardware design tool that lets you edit visually, with code, or both. It&#39;s powered by the KittyCAD Design API, the first API created for anyone to build hardware design tools. The 3D view is not running on your computer, but is instead being streamed to you from an instance of our Geometry Engine on a remote GPU as video. This is an alpha release, so you will encounter bugs and missing features. You can read our expectations for alpha users here, and please give us feedback on your experience our Discord! We are trying to release as early as possible to get feedback from users like you. As you go through the onboarding, we&#39;ll be changing and resetting your code occasionally, so that we can reference specific code features. So hold off on writing production KCL code until you&#39;re done with the onboarding&quot; width=&quot;1280&quot; height=&quot;895&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Warning that the view isn&#39;t actually on your computer, it is streaming from a cloud GPU. My first impression is that this is going to need to be really compelling for me to invest too much time into it.&lt;/p&gt;
&lt;h1 id=&quot;%22text-to-cad%22-prompt&quot; tabindex=&quot;-1&quot;&gt;&amp;quot;Text-to-CAD&amp;quot; Prompt&lt;/h1&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;hexagon shaped box&lt;/li&gt;
&lt;li&gt;100mm diameter&lt;/li&gt;
&lt;li&gt;extrude to 40mm height&lt;/li&gt;
&lt;li&gt;top has inset hexagon with 80mm diameter and 10mm depth&lt;/li&gt;
&lt;li&gt;two opposing edges have place for fingers subtracted, pills or spheres with 20mm diameter&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Starting from nothing, I thought I&#39;d see if the &amp;quot;text-to-CAD&amp;quot; feature can show a good starting place. It is the ✨ icon on the top toolbar.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-zoo-text-to-cad-toast.png-FrjT3irm4n-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-zoo-text-to-cad-toast.png-FrjT3irm4n-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-zoo-text-to-cad-toast.png-FrjT3irm4n-1280.png&quot; alt=&quot;Small toast message on the bottom that Text-to-CAD has succeeded.&quot; width=&quot;1280&quot; height=&quot;428&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Let&#39;s see about that. The tiny icon is 50% encouraging, 50% glitchy.&lt;/p&gt;
&lt;h2 id=&quot;result-1&quot; tabindex=&quot;-1&quot;&gt;Result&lt;/h2&gt;
&lt;p&gt;Here is the code and image that it came up with. Color me mildly impressed.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-zoo-first-prompt-result.png-Meo1EynFni-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-zoo-first-prompt-result.png-Meo1EynFni-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-zoo-first-prompt-result.png-Meo1EynFni-1280.png&quot; alt=&quot;Interface with &amp;quot;feature tree&amp;quot; &amp;quot;KCL code&amp;quot; and 3d view of first LLM prompt result.&quot; width=&quot;1280&quot; height=&quot;779&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;The cutouts are on corners, and it didn&#39;t do the correct Boolean correctly, but the parameters in code do seem like a decent starting place, considering that I have no experience or instruction with the app.&lt;/p&gt;
&lt;p&gt;I do have enough design experience to have written a fairly specific prompt for the object that I have sketched. Sketching helped me think about the geometry construction at a high and manual level. Pencil and pen aided design.&lt;/p&gt;
&lt;h2 id=&quot;generated-code&quot; tabindex=&quot;-1&quot;&gt;Generated code&lt;/h2&gt;
&lt;pre class=&quot;language-kcl&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-kcl&quot;&gt;/* Generated by Text-to-CAD: hexagon shaped box
 * 100mm diameter
 * extrude to 40mm height
 * top has inset hexagon with 80mm diameter and 10mm depth
 * two opposing edges have place for fingers subtracted, pills or spheres with 20mm diameter
 */

// Set units
@settings(defaultLengthUnit = mm)

// Define constants
outerHexDiameter = 100
outerHexRadius = outerHexDiameter / 2
outerHexHeight = 40

innerHexDiameter = 80
innerHexRadius = innerHexDiameter / 2
innerHexDepth = 10

fingerCutDiameter = 20
fingerCutRadius = fingerCutDiameter / 2

// Create the outer hexagon box
outerHexSketch = startSketchOn(&#39;XY&#39;)
  |&gt; polygon({
       radius = outerHexRadius,
       numSides = 6,
       center = [0, 0],
       inscribed = true
     }, %)

// Create the finger cutout sketches
fingerCutSketch1 = startSketchOn(&#39;XY&#39;)
  |&gt; circle({ center = [outerHexRadius, 0], radius = fingerCutRadius }, %)

fingerCutSketch2 = startSketchOn(&#39;XY&#39;)
  |&gt; circle({ center = [-outerHexRadius, 0], radius = fingerCutRadius }, %)

// Subtract the finger cutouts from the outer hexagon sketch
outerHexWithHolesSketch = outerHexSketch
  |&gt; hole(fingerCutSketch1, %)
  |&gt; hole(fingerCutSketch2, %)

// Extrude the outer hexagon with holes
outerHex = extrude(outerHexHeight, outerHexWithHolesSketch)

// Create the inset hexagon on top
innerHexSketch = startSketchOn(outerHex, &#39;end&#39;)
  |&gt; polygon({
       radius = innerHexRadius,
       numSides = 6,
       center = [0, 0],
       inscribed = true
     }, %)

innerHex = extrude(-innerHexDepth, innerHexSketch)

// The final box is the outer hexagon with the inner hexagon cutout
finalBox = outerHex&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;%22prompt-to-edit%22&quot; tabindex=&quot;-1&quot;&gt;&amp;quot;Prompt-to-Edit&amp;quot;&lt;/h1&gt;
&lt;p&gt;Also under the ✨ icon.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Center the fingerCut cylinders on the selected edges. Change the boolean operation to subtract the cylinders from the rest of the box.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-zoo-prompt-to-edit.png-x1yCETER-T-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-zoo-prompt-to-edit.png-x1yCETER-T-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-zoo-prompt-to-edit.png-x1yCETER-T-1280.png&quot; alt=&quot;Interface for prompt to edit. Correct selected edges.&quot; width=&quot;1280&quot; height=&quot;571&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Failed to edit your KCL code, please try again with a different prompt or selection&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;:sad-trombone:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;move fingerCutSketch1 to midpoint of hexagon edge&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;:sad-trombone:&lt;/p&gt;
&lt;p&gt;OK that&#39;s not really working with my level of this app.&lt;/p&gt;
&lt;h1 id=&quot;attempt-to-tinker-with-the-code&quot; tabindex=&quot;-1&quot;&gt;Attempt to tinker with the code&lt;/h1&gt;
&lt;p&gt;This is the point where I&#39;d love to ask a question of an expert. What&#39;s the first step in this situation?&lt;/p&gt;
&lt;p&gt;I can add this point definition to get the position of the first hole.&lt;/p&gt;
&lt;pre class=&quot;language-kcl&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-kcl&quot;&gt;// Define the first two vertices (60° apart)
vertex1 = [outerHexRadius, 0]
vertex2 = [outerHexRadius/2, outerHexRadius * sqrt(3)/2]
// Midpoint of those points is the average
edgeMidpoint = [(vertex1[0] + vertex2[0])/2, (vertex1[1] + vertex2[1])/2]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Would be better with &lt;a href=&quot;https://xoxo.zone/@forresto/113865294623578977&quot;&gt;vector operator overrides&lt;/a&gt; but I can look into that if this app sticks.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-zoo-code-to-move-hole.png-nyS18vU0Yc-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-zoo-code-to-move-hole.png-nyS18vU0Yc-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-zoo-code-to-move-hole.png-nyS18vU0Yc-1280.png&quot; alt=&quot;&quot; width=&quot;1280&quot; height=&quot;885&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;It moved to the right place, centered on the edge. 🎉&lt;/p&gt;
&lt;p&gt;The Boolean subtraction (&lt;code&gt;hole()&lt;/code&gt;) seems like it is done in the wrong place in the code.&lt;/p&gt;
&lt;h1 id=&quot;claude-chat-with-this-blog-post.&quot; tabindex=&quot;-1&quot;&gt;Claude chat with this blog post.&lt;/h1&gt;
&lt;p&gt;I&#39;m taking these notes in &lt;a href=&quot;https://zed.dev&quot;&gt;Zed&lt;/a&gt; which has access to Claude 3.5 Sonnet in a sidebar. It&#39;s interesting to feed in my own blog post as I&#39;m figuring stuff out, and see if it can be of help. As always, it hallucinates specifics, but can be helpful for high-level planning.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You&lt;/p&gt;
&lt;p&gt;See my diff and further comments&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;content/fab-academy/02-zoo-modeling-app.md&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Assitant&lt;/p&gt;
&lt;p&gt;Yes, after your experiment with moving the holes, &lt;s&gt;I see that &lt;code&gt;rotate2d()&lt;/code&gt; would be cleaner than my previous suggestion. Let me refine the approach:&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;And you&#39;re right about the Boolean operation - looking at the original code, the &lt;code&gt;hole()&lt;/code&gt; operations are being done on the 2D sketch before extrusion, when they should probably be 3D operations. The holes should go all the way through the box, not just cut the base sketch.&lt;/p&gt;
&lt;p&gt;To fix this, we should:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Extrude the base hexagon first&lt;/li&gt;
&lt;li&gt;Create and extrude the finger cut cylinders&lt;/li&gt;
&lt;li&gt;Use 3D Boolean subtraction to remove the cylinders from the box&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Would you like me to show how to restructure the code to do the Boolean operations in 3D instead of 2D?&lt;/p&gt;
&lt;p&gt;I also appreciate your comments about local vs cloud CAD. The latency issues you&#39;re experiencing with navigation and selection are significant usability concerns that don&#39;t exist with local rendering.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Note: &lt;code&gt;rotate2d()&lt;/code&gt; for KCL is Claude&#39;s hallucination.&lt;/p&gt;
&lt;h1 id=&quot;wrapping-up&quot; tabindex=&quot;-1&quot;&gt;Wrapping up&lt;/h1&gt;
&lt;h2 id=&quot;app-feel&quot; tabindex=&quot;-1&quot;&gt;App feel&lt;/h2&gt;
&lt;p&gt;Learning the canvas navigation is not helped by the streaming lag. My mouse wheel zooms too fast and the model escapes behind me. Hovering and selections take moments too long.&lt;/p&gt;
&lt;p&gt;I can&#39;t imagine taking the tradeoff to develop an app to render with Cloud GPUs, but I guess they have reasons.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Early on, we knew we wanted to build an API for CAD using cloud GPUs doing the 3D rendering. This meant we needed to stream the video generated on the cloud to our clients. – &lt;a href=&quot;https://zoo.dev/blog/cad-webrtc&quot;&gt;Zoo Blog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But why?&lt;/p&gt;
&lt;p&gt;I&#39;ve been enamored with SolveSpace and OpenSCAD, which have small executables and feel very responsive. I&#39;d encourage the developers of Zoo to try these other apps. Blender isn&#39;t small, but it feels very responsive. Local software!&lt;/p&gt;
&lt;p&gt;(Disclosure: I work on &lt;a href=&quot;https://cuttle.xyz&quot;&gt;web-based 2D CAD&lt;/a&gt;, which is not local. But the rendering is local.)&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/KittyCAD/modeling-app/discussions/510&quot;&gt;Subtract&lt;/a&gt; and other Boolean operations are not available yet, so I would have to rethink my design and prompt to get closer to what I had in mind.&lt;/p&gt;
&lt;p&gt;My time is up for evaluating this CAD package. When trying other packages, I&#39;ll be able to compare the tradeoffs of cloud rendering and LLM prompting. My impression is that the Zoo has stalled, based on the &lt;a href=&quot;https://zoo.dev/blog&quot;&gt;company blog&lt;/a&gt; and age of the Github feature discussions.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Week 02. CAD Comparison</title>
    <link href="https://forresto.com/fab-academy/02-cad-comparison.html" />
    <updated>2025-01-31T00:00:00Z</updated>
    <id>https://forresto.com/fab-academy/02-cad-comparison.html</id>
    <content type="html">&lt;p&gt;My goal for this CAD Comparison week should be to get a very rough model from each system that I try. As possible, it should have ballpark dimensions and features, but only get to the level of rough sketch.&lt;/p&gt;
&lt;h1 id=&quot;prompt&quot; tabindex=&quot;-1&quot;&gt;Prompt&lt;/h1&gt;
&lt;p&gt;&amp;quot;Prompt&amp;quot; for myself, any tutors that I have time with, and any LLMs that I experiment with.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hexagon shaped box&lt;/li&gt;
&lt;li&gt;100mm diameter&lt;/li&gt;
&lt;li&gt;extrude to 40mm height&lt;/li&gt;
&lt;li&gt;top has inset hexagon with 80mm diameter and 10mm depth&lt;/li&gt;
&lt;li&gt;two opposing edges have place for fingers subtracted, pills or spheres with 20mm diameter&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;sketch&quot; tabindex=&quot;-1&quot;&gt;Sketch&lt;/h1&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/01-fo-concept-player.png-qkYt2M088X-1273.avif 1273w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/01-fo-concept-player.png-qkYt2M088X-1273.webp 1273w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/01-fo-concept-player.png-qkYt2M088X-1273.png&quot; alt=&quot;Concept sketch of media player.&quot; width=&quot;1273&quot; height=&quot;1794&quot;&gt;&lt;/picture&gt;
Sketch from &lt;a href=&quot;https://forresto.com/fab-academy/01-potential-final-project.html&quot;&gt;Potential Final Project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sketching some views on paper seems like a good way to start the CAD process. ✍️&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-music-box-pen-paper.png-c9Np4_3gaP-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-music-box-pen-paper.png-c9Np4_3gaP-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-music-box-pen-paper.png-c9Np4_3gaP-1280.png&quot; alt=&quot;Hand drawn sketch, top and front views of a hexagonal music box.&quot; width=&quot;1280&quot; height=&quot;1668&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h1 id=&quot;cad-software&quot; tabindex=&quot;-1&quot;&gt;CAD software&lt;/h1&gt;
&lt;h2 id=&quot;zoo&quot; tabindex=&quot;-1&quot;&gt;Zoo&lt;/h2&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-zoo-first-prompt-result.png-Meo1EynFni-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-zoo-first-prompt-result.png-Meo1EynFni-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-zoo-first-prompt-result.png-Meo1EynFni-1280.png&quot; alt=&quot;Zoo interface.&quot; width=&quot;1280&quot; height=&quot;779&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://forresto.com/fab-academy/02-zoo-modeling-app.html&quot;&gt;Zoo Modeling App evaluation&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;picocad&quot; tabindex=&quot;-1&quot;&gt;picoCAD&lt;/h2&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-picocad.png-tYxW_HgIYy-512.avif 512w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-picocad.png-tYxW_HgIYy-512.webp 512w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-picocad.png-tYxW_HgIYy-512.png&quot; alt=&quot;picoCAD interface.&quot; width=&quot;512&quot; height=&quot;512&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://forresto.com/fab-academy/02-picocad.html&quot;&gt;picoCAD evaluation&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;solvespace&quot; tabindex=&quot;-1&quot;&gt;SolveSpace&lt;/h2&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-solvespace-box.png-ZJRn3GYduG-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-solvespace-box.png-ZJRn3GYduG-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-solvespace-box.png-ZJRn3GYduG-1280.png&quot; alt=&quot;SolveSpace interface.&quot; width=&quot;1280&quot; height=&quot;777&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://forresto.com/fab-academy/02-solvespace.html&quot;&gt;SolveSpace evaluation&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;freecad&quot; tabindex=&quot;-1&quot;&gt;FreeCAD&lt;/h2&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-freecad-interface.png-xIjjN0LW5D-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-freecad-interface.png-xIjjN0LW5D-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-freecad-interface.png-xIjjN0LW5D-1280.png&quot; alt=&quot;FreeCAD interface with parameters.&quot; width=&quot;1280&quot; height=&quot;777&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://forresto.com/fab-academy/02-freecad.html&quot;&gt;FreeCAD evaluation&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;cuttle.xyz&quot; tabindex=&quot;-1&quot;&gt;Cuttle.xyz&lt;/h2&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-cuttle-xyz-interface.png-BE_dhztC22-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-cuttle-xyz-interface.png-BE_dhztC22-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-cuttle-xyz-interface.png-BE_dhztC22-1280.png&quot; alt=&quot;Cuttle.xyz interface.&quot; width=&quot;1280&quot; height=&quot;746&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://forresto.com/fab-academy/02-cuttle-xyz.html&quot;&gt;Cuttle.xyz evaluation&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;result&quot; tabindex=&quot;-1&quot;&gt;Result&lt;/h1&gt;
&lt;p&gt;FreeCAD and SolveSpace project files: &lt;a href=&quot;https://forresto.com/fab-academy/02-project-files.zip&quot;&gt;02-project-files.zip&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&quot;reference&quot; tabindex=&quot;-1&quot;&gt;Reference&lt;/h1&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/02-cad-comparison-digikey.png-SuD2hsY9Qp-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/02-cad-comparison-digikey.png-SuD2hsY9Qp-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/02-cad-comparison-digikey.png-SuD2hsY9Qp-1280.png&quot; alt=&quot;Chart comparing FreeCAD, SolidWorks, Solid Edge, Fusion, Tinkercad, Onshape, Blender, OpenSCAD&quot; width=&quot;1280&quot; height=&quot;704&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;CAD comparison chart from a &lt;a href=&quot;https://www.youtube.com/watch?v=8VPYTTnqmfs&quot;&gt;DigiKey video introducing FreeCAD&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>&lt;model-viewer&gt; for web 3d</title>
    <link href="https://forresto.com/fab-academy/model-viewer-web-3d.html" />
    <updated>2025-01-30T00:00:00Z</updated>
    <id>https://forresto.com/fab-academy/model-viewer-web-3d.html</id>
    <content type="html">&lt;p&gt;I&#39;m using the &lt;a href=&quot;https://modelviewer.dev/&quot;&gt;&lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; web component&lt;/a&gt; to embed 3D models in blog posts. I&#39;m using it to show off &lt;a href=&quot;https://forresto.com/fab-academy/02-cad-comparison.html&quot;&gt;my CAD models from this week&lt;/a&gt;.&lt;/p&gt;
&lt;script type=&quot;module&quot; src=&quot;https://forresto.com/js/model-viewer.min.js&quot;&gt;&lt;/script&gt;
&lt;model-viewer src=&quot;model-viewer-example-box.glb&quot; camera-controls=&quot;&quot; poster=&quot;model-viewer-example-box.glb-poster.webp&quot;&gt;
&lt;/model-viewer&gt;
&lt;h1 id=&quot;gltf%2Fglb&quot; tabindex=&quot;-1&quot;&gt;glTF/GLB&lt;/h1&gt;
&lt;p&gt;You need to export your model as GLB (or glTF). If your modeling software doesn&#39;t support GLB export, I have found that FreeCAD can import STEP files and export GLB. I did this for my &lt;a href=&quot;https://forresto.com/fab-academy/02-solvespace.html&quot;&gt;SolveSpace evaluation&lt;/a&gt; post.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;glTF/GLB… is the Khronos standard known as the JPEG of 3D and the first format to standardize Physically-Based Rendering (PBR), making your models look realistic under any lighting, on any renderer. It is also compact, compressible, and loads rapidly into the GPU. – &lt;a href=&quot;https://modelviewer.dev/docs/faq.html#entrydocs-general-questions-formats&quot;&gt;model-viewer FAQ&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;file-size&quot; tabindex=&quot;-1&quot;&gt;File size&lt;/h2&gt;
&lt;p&gt;glTF files are text-based, while GLB is the binary version. For the same scene, GLB files will be smaller. I noticed that exporting the example on this page with a fillet ended up much larger, 1.3mb vs 16kb. FreeCAD doesn&#39;t have any export options for GLB, but some other software might be able to export it with fewer verticies, good enough for sharing on the web.&lt;/p&gt;
&lt;h1 id=&quot;html-tags&quot; tabindex=&quot;-1&quot;&gt;HTML tags&lt;/h1&gt;
&lt;p&gt;You can preview the GLB and make adjustments with &lt;a href=&quot;https://modelviewer.dev/editor/&quot;&gt;Model Viewer Editor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The embed code looks like this, which works in both HTML and Markdown.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;module&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://ajax.googleapis.com/ajax/libs/model-viewer/4.0.0/model-viewer.min.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;model-viewer&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;model-viewer-example-box.glb&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;camera-controls&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;poster&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;model-viewer-example-box.webp&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;model-viewer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to avoid loading external resources, you can save the model-viewer script to your own site and reference it with &lt;code&gt;src=&amp;quot;/js/model-viewer.min.js&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You only need the script tag once per page that has &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;
&lt;h1 id=&quot;css-style&quot; tabindex=&quot;-1&quot;&gt;CSS style&lt;/h1&gt;
&lt;p&gt;It&#39;s important to not fill the screen with the viewer, because it can &amp;quot;steal&amp;quot; pointer gestures and mouse wheel events for 3D camera movement. This can make it annoying to scroll past the viewer to the rest of your page. I styled my embeds with 80% width to be sure that there is margin on both sides that will always be available for scroll gestures.&lt;/p&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;model-viewer&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 80%&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;aspect-ratio&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 4/3&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1px #c4c4c4 solid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Week 01. Potential Final Project</title>
    <link href="https://forresto.com/fab-academy/01-potential-final-project.html" />
    <updated>2025-01-29T00:00:00Z</updated>
    <id>https://forresto.com/fab-academy/01-potential-final-project.html</id>
    <content type="html">&lt;p&gt;I&#39;ve been floating the idea for friends and family to imagine the project that I&#39;m going to be making this year, and tell me their thoughts on it. It&#39;s a half joke, but wouldn&#39;t it be neat if you could do that? I imagine people with a big audience can do that, but there&#39;s a fine line between having no replies and having too many.&lt;/p&gt;
&lt;p&gt;In the real world, I have to share some sketches, and get more specific when asking for feedback.&lt;/p&gt;
&lt;p&gt;I have three concepts now.&lt;/p&gt;
&lt;h1 id=&quot;calm-timer&quot; tabindex=&quot;-1&quot;&gt;Calm Timer&lt;/h1&gt;
&lt;p&gt;Plays a nice-sounding chime on the hour, or set intervals with a small screen.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/01-fo-concept-timer.png-BF2h-TOepz-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/01-fo-concept-timer.png-BF2h-TOepz-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/01-fo-concept-timer.png-BF2h-TOepz-1280.png&quot; alt=&quot;Concept sketch of a curved wooden stand with a metal chime suspended within it.&quot; width=&quot;1280&quot; height=&quot;861&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h1 id=&quot;tangible-media-player&quot; tabindex=&quot;-1&quot;&gt;Tangible Media Player&lt;/h1&gt;
&lt;p&gt;A collection of wood tokens start a playlist when set on the player. The tokens bring back some tangibility to the act of choosing and playing music. They can also load internet radio stations.&lt;/p&gt;
&lt;p&gt;I remember finding a &amp;quot;record player&amp;quot; made in preschool with paper plate, pipe cleaner, buttons. If I choose this project I&#39;ll be honoring my small self that really wanted a cool little tangible music player.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/01-fo-concept-player.png-qkYt2M088X-1273.avif 1273w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/01-fo-concept-player.png-qkYt2M088X-1273.webp 1273w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/01-fo-concept-player.png-qkYt2M088X-1273.png&quot; alt=&quot;Concept sketch of a hexagonal media player with hexagonal media tokens.&quot; width=&quot;1273&quot; height=&quot;1794&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;prior-art&quot; tabindex=&quot;-1&quot;&gt;Prior art&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Månsteri&#39;s &lt;a href=&quot;https://mansteri.com/works/aanimuseo-v/&quot;&gt;Äänimuseo&lt;/a&gt; tangible sound player.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;closed-eye-vr&quot; tabindex=&quot;-1&quot;&gt;Closed-Eye VR&lt;/h1&gt;
&lt;p&gt;Closed-eye solar-powered VR visor. With eyes closed, chill in the sun light or with a bright lamp. An array of &lt;em&gt;liquid crystal&lt;/em&gt; (LC) cells are activated at different intervals, giving the illusion of motion.&lt;/p&gt;
&lt;p&gt;I like how this concept would need a tiny fraction of the energy needed for high-end virtual reality systems. The challenge of programming small low-energy microcontrollers is interesting.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/fab-academy/01-fo-concept-visor.png-HrUEVM9JV6-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/fab-academy/01-fo-concept-visor.png-HrUEVM9JV6-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/fab-academy/01-fo-concept-visor.png-HrUEVM9JV6-1280.png&quot; alt=&quot;Concept sketch of a visor for closed-eye visions.&quot; width=&quot;1280&quot; height=&quot;1074&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;prior-art-1&quot; tabindex=&quot;-1&quot;&gt;Prior art&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Brion Gysin &lt;a href=&quot;https://en.wikipedia.org/wiki/Dreamachine&quot;&gt;Dreamachine&lt;/a&gt; (1959)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Geordi_La_Forge#VISOR&quot;&gt;Geordi LaForge&#39;s VISOR&lt;/a&gt; is an obvious style inspiration.&lt;/li&gt;
&lt;li&gt;Mitch Altman&#39;s &lt;a href=&quot;https://cornfieldelectronics.com/neurodreamer/buy.nd.php&quot;&gt;Neuro Dreamer&lt;/a&gt; flashes lights into your dreams to help you lucid dream.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Active_shutter_3D_system&quot;&gt;Active shutter 3D glasses&lt;/a&gt; could be a source of &lt;em&gt;liquid crystal cell&lt;/em&gt; components, though smaller would be better to fit more.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://weldingpros.net/how-do-auto-darkening-welding-helmets-work/&quot;&gt;Auto Darkening Welding Helmet&lt;/a&gt; forehead-sized solar panel is enough to darken this style of welding mask, so I think it&#39;s feasible, if I can keep the electronics efficient enough.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Meemoo Video Transition Loop</title>
    <link href="https://forresto.com/meemoo/meemoo-video-transition-loop.html" />
    <updated>2025-01-25T00:00:00Z</updated>
    <id>https://forresto.com/meemoo/meemoo-video-transition-loop.html</id>
    <content type="html">&lt;p&gt;Meemoo jam...&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://app.meemoo.org/#gist/35e3b45b5fb0ab1e0625c4410da84105&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://forresto.com/meemoo/2025-01-25-meemoo-video-transition-loop.png-JnK-o6CZ7Z-1280.avif 1280w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://forresto.com/meemoo/2025-01-25-meemoo-video-transition-loop.png-JnK-o6CZ7Z-1280.webp 1280w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://forresto.com/meemoo/2025-01-25-meemoo-video-transition-loop.png-JnK-o6CZ7Z-1280.png&quot; alt=&quot;Meemoo.org nodes and wires interface with tweens driving an endlessly looping video&quot; width=&quot;1280&quot; height=&quot;896&quot;&gt;&lt;/picture&gt; Meemoo app&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(I should make an auto-embedder for Meemoo URLs.)&lt;/p&gt;
&lt;p&gt;I made this in &amp;quot;IX2&amp;quot; the interaction system in Webflow, c. 2019. Today I remade the composition in Meemoo, and I liked tweaking the numbers like this, with stacked tweens. The video loop and the scale and translation loops are independent.&lt;/p&gt;
&lt;p&gt;All of my recent practice in Blender Geometry Nodes has helped me to understand Meemoo&#39;s data flow in a deeper way. I wish Blender&#39;s interface had more debug views like Meemoo. You can drag any of the tweens to scrub the values, or leave it looping and tweak stuff as you go. You can do some of that in Blender, but the debug views are limited, and the node view is mostly static.&lt;/p&gt;
&lt;p&gt;I remember @Barrett&#39;s reply to the Webflow build, something like &amp;quot;jeez man.&amp;quot;&lt;/p&gt;
&lt;p&gt;I agree.&lt;/p&gt;
</content>
  </entry>
</feed>